{
    "sourceFile": "frontend/script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1754856332401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754856367003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,128 @@\n+// === CONFIGURE THIS ===\n+// https://ftiktok-f8f4fwfsbkcdgbd8.azurewebsites.net/uploads\n+const API_BASE = 'https://ftiktok-f8f4fwfsbkcdgbd8.azurewebsites.net'; // Update if needed\n+\n+const uploadForm = document.getElementById('uploadForm');\n+const fileInput = document.getElementById('videoInput');\n+const statusEl = document.getElementById('status');\n+const videoFeed = document.getElementById('videoFeed');\n+const progressArea = document.getElementById('progressArea');\n+const progressBar = document.getElementById('progressBar');\n+const progressText = document.getElementById('progressText');\n+\n+uploadForm.addEventListener('submit', async (e) => {\n+  e.preventDefault();\n+  if (!fileInput.files || fileInput.files.length === 0) {\n+    alert('Please select a video file first.');\n+    return;\n+  }\n+  const file = fileInput.files[0];\n+  const form = new FormData();\n+  form.append('video', file);\n+\n+  statusEl.textContent = 'Uploading...';\n+  progressArea.style.display = 'block';\n+  progressBar.style.width = '0%';\n+  progressText.textContent = '';\n+\n+  try {\n+    await new Promise((resolve, reject) => {\n+      const xhr = new XMLHttpRequest();\n+      xhr.open('POST', API_BASE + '/upload', true);\n+      xhr.onload = () => (xhr.status >= 200 && xhr.status < 300) ? resolve(xhr.responseText) : reject(new Error(`Upload failed: ${xhr.status} ${xhr.statusText} – ${xhr.responseText}`));\n+      xhr.onerror = () => reject(new Error('Network error'));\n+      xhr.upload.onprogress = (evt) => {\n+        if (evt.lengthComputable) {\n+          const pct = Math.round((evt.loaded / evt.total) * 100);\n+          progressBar.style.width = pct + '%';\n+          progressText.textContent = `Uploaded ${pct}% (${Math.round(evt.loaded / 1024)} KB / ${Math.round(evt.total / 1024)} KB)`;\n+        }\n+      };\n+      xhr.send(form);\n+    });\n+\n+    statusEl.textContent = 'Upload complete ✅';\n+    fileInput.value = '';\n+    await loadVideos();\n+  } catch (err) {\n+    console.error(err);\n+    statusEl.textContent = 'Upload error ❌';\n+    alert('Upload failed: ' + (err.message || err));\n+  } finally {\n+    setTimeout(() => {\n+      progressArea.style.display = 'none';\n+      progressBar.style.width = '0%';\n+      progressText.textContent = '';\n+    }, 1500);\n+  }\n+});\n+\n+async function loadVideos() {\n+  try {\n+    const res = await fetch(API_BASE + '/videos');\n+    if (!res.ok) throw new Error(`Failed to list videos: ${res.status}`);\n+    const list = await res.json();\n+    videoFeed.innerHTML = '';\n+    if (!Array.isArray(list) || list.length === 0) {\n+      videoFeed.innerHTML = '<div class=\"small\">No videos yet</div>';\n+      return;\n+    }\n+    list.forEach(name => {\n+      const wrap = document.createElement('div');\n+      wrap.style.width = '320px';\n+      wrap.style.display = 'flex';\n+      wrap.style.flexDirection = 'column';\n+      wrap.style.gap = '8px';\n+\n+      const v = document.createElement('video');\n+      v.src = `${API_BASE}/uploads/${encodeURIComponent(name)}`;\n+      v.controls = true;\n+      v.width = 320;\n+\n+      const info = document.createElement('div');\n+      info.className = 'small';\n+      info.textContent = name;\n+\n+      wrap.appendChild(v);\n+      wrap.appendChild(info);\n+      videoFeed.appendChild(wrap);\n+    });\n+  } catch (err) {\n+    console.error(err);\n+    videoFeed.innerHTML = '<div class=\"small\">Could not load videos. Check backend or CORS.</div>';\n+  }\n+}\n+\n+window.addEventListener('load', loadVideos);\n+\n+// const API_BASE = 'http://127.0.0.1:5000';\n+\n+// document.getElementById('uploadForm').addEventListener('submit', async (e) => {\n+//   e.preventDefault();\n+//   const fileInput = document.getElementById('videoInput');\n+//   const formData = new FormData();\n+//   formData.append('video', fileInput.files[0]);\n+\n+//   await fetch(`${API_BASE}/upload`, {\n+//     method: 'POST',\n+//     body: formData\n+//   });\n+\n+//   loadVideos();\n+// });\n+\n+// async function loadVideos() {\n+//   const res = await fetch(`${API_BASE}/videos`);\n+//   const videos = await res.json();\n+\n+//   const videoFeed = document.getElementById('videoFeed');\n+//   videoFeed.innerHTML = '';\n+//   videos.forEach(filename => {\n+//     const video = document.createElement('video');\n+//     video.src = `${API_BASE}/uploads/${filename}`;\n+//     video.controls = true;\n+//     videoFeed.appendChild(video);\n+//   });\n+// }\n+\n+// loadVideos();\n"
                },
                {
                    "date": 1754856482596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+const API_BASE = 'http://127.0.0.1:5000';\n+\n+document.getElementById('uploadForm').addEventListener('submit', async (e) => {\n+  e.preventDefault();\n+  const fileInput = document.getElementById('videoInput');\n+  const formData = new FormData();\n+  formData.append('video', fileInput.files[0]);\n+\n+  await fetch(`${API_BASE}/upload`, {\n+    method: 'POST',\n+    body: formData\n+  });\n+\n+  loadVideos();\n+});\n+\n+async function loadVideos() {\n+  const res = await fetch(`${API_BASE}/videos`);\n+  const videos = await res.json();\n+\n+  const videoFeed = document.getElementById('videoFeed');\n+  videoFeed.innerHTML = '';\n+  videos.forEach(filename => {\n+    const video = document.createElement('video');\n+    video.src = `${API_BASE}/uploads/${filename}`;\n+    video.controls = true;\n+    videoFeed.appendChild(video);\n+  });\n+}\n+\n+loadVideos();\n"
                },
                {
                    "date": 1754861901627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+const API_BASE = 'http://127.0.0.1:5000';\n+\n+document.getElementById('uploadForm').addEventListener('submit', async (e) => {\n+  e.preventDefault();\n+  const fileInput = document.getElementById('videoInput');\n+  const formData = new FormData();\n+  formData.append('video', fileInput.files[0]);\n+\n+  await fetch(`${API_BASE}/upload`, {\n+    method: 'POST',\n+    body: formData\n+  });\n+\n+  loadVideos();\n+});\n+\n+async function loadVideos() {\n+  const res = await fetch(`${API_BASE}/videos`);\n+  const videos = await res.json();\n+\n+  const videoFeed = document.getElementById('videoFeed');\n+  videoFeed.innerHTML = '';\n+  videos.forEach(filename => {\n+    const video = document.createElement('video');\n+    video.src = `${API_BASE}/uploads/${filename}`;\n+    video.controls = true;\n+    videoFeed.appendChild(video);\n+  });\n+}\n+\n+loadVideos();\n"
                },
                {
                    "date": 1754914004448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,291 +28,4 @@\n   });\n }\n \n loadVideos();\n-const API_BASE = 'http://127.0.0.1:5000';\n-\n-document.getElementById('uploadForm').addEventListener('submit', async (e) => {\n-  e.preventDefault();\n-  const fileInput = document.getElementById('videoInput');\n-  const formData = new FormData();\n-  formData.append('video', fileInput.files[0]);\n-\n-  await fetch(`${API_BASE}/upload`, {\n-    method: 'POST',\n-    body: formData\n-  });\n-\n-  loadVideos();\n-});\n-\n-async function loadVideos() {\n-  const res = await fetch(`${API_BASE}/videos`);\n-  const videos = await res.json();\n-\n-  const videoFeed = document.getElementById('videoFeed');\n-  videoFeed.innerHTML = '';\n-  videos.forEach(filename => {\n-    const video = document.createElement('video');\n-    video.src = `${API_BASE}/uploads/${filename}`;\n-    video.controls = true;\n-    videoFeed.appendChild(video);\n-  });\n-}\n-\n-loadVideos();\n-// === CONFIGURE THIS ===\n-// https://ftiktok-f8f4fwfsbkcdgbd8.azurewebsites.net/uploads\n-const API_BASE = 'https://ftiktok-f8f4fwfsbkcdgbd8.azurewebsites.net'; // Update if needed\n-\n-const uploadForm = document.getElementById('uploadForm');\n-const fileInput = document.getElementById('videoInput');\n-const statusEl = document.getElementById('status');\n-const videoFeed = document.getElementById('videoFeed');\n-const progressArea = document.getElementById('progressArea');\n-const progressBar = document.getElementById('progressBar');\n-const progressText = document.getElementById('progressText');\n-\n-uploadForm.addEventListener('submit', async (e) => {\n-  e.preventDefault();\n-  if (!fileInput.files || fileInput.files.length === 0) {\n-    alert('Please select a video file first.');\n-    return;\n-  }\n-  const file = fileInput.files[0];\n-  const form = new FormData();\n-  form.append('video', file);\n-\n-  statusEl.textContent = 'Uploading...';\n-  progressArea.style.display = 'block';\n-  progressBar.style.width = '0%';\n-  progressText.textContent = '';\n-\n-  try {\n-    await new Promise((resolve, reject) => {\n-      const xhr = new XMLHttpRequest();\n-      xhr.open('POST', API_BASE + '/upload', true);\n-      xhr.onload = () => (xhr.status >= 200 && xhr.status < 300) ? resolve(xhr.responseText) : reject(new Error(`Upload failed: ${xhr.status} ${xhr.statusText} – ${xhr.responseText}`));\n-      xhr.onerror = () => reject(new Error('Network error'));\n-      xhr.upload.onprogress = (evt) => {\n-        if (evt.lengthComputable) {\n-          const pct = Math.round((evt.loaded / evt.total) * 100);\n-          progressBar.style.width = pct + '%';\n-          progressText.textContent = `Uploaded ${pct}% (${Math.round(evt.loaded / 1024)} KB / ${Math.round(evt.total / 1024)} KB)`;\n-        }\n-      };\n-      xhr.send(form);\n-    });\n-\n-    statusEl.textContent = 'Upload complete ✅';\n-    fileInput.value = '';\n-    await loadVideos();\n-  } catch (err) {\n-    console.error(err);\n-    statusEl.textContent = 'Upload error ❌';\n-    alert('Upload failed: ' + (err.message || err));\n-  } finally {\n-    setTimeout(() => {\n-      progressArea.style.display = 'none';\n-      progressBar.style.width = '0%';\n-      progressText.textContent = '';\n-    }, 1500);\n-  }\n-});\n-\n-async function loadVideos() {\n-  try {\n-    const res = await fetch(API_BASE + '/videos');\n-    if (!res.ok) throw new Error(`Failed to list videos: ${res.status}`);\n-    const list = await res.json();\n-    videoFeed.innerHTML = '';\n-    if (!Array.isArray(list) || list.length === 0) {\n-      videoFeed.innerHTML = '<div class=\"small\">No videos yet</div>';\n-      return;\n-    }\n-    list.forEach(name => {\n-      const wrap = document.createElement('div');\n-      wrap.style.width = '320px';\n-      wrap.style.display = 'flex';\n-      wrap.style.flexDirection = 'column';\n-      wrap.style.gap = '8px';\n-\n-      const v = document.createElement('video');\n-      v.src = `${API_BASE}/uploads/${encodeURIComponent(name)}`;\n-      v.controls = true;\n-      v.width = 320;\n-\n-      const info = document.createElement('div');\n-      info.className = 'small';\n-      info.textContent = name;\n-\n-      wrap.appendChild(v);\n-      wrap.appendChild(info);\n-      videoFeed.appendChild(wrap);\n-    });\n-  } catch (err) {\n-    console.error(err);\n-    videoFeed.innerHTML = '<div class=\"small\">Could not load videos. Check backend or CORS.</div>';\n-  }\n-}\n-\n-window.addEventListener('load', loadVideos);\n-\n-// const API_BASE = 'http://127.0.0.1:5000';\n-\n-// document.getElementById('uploadForm').addEventListener('submit', async (e) => {\n-//   e.preventDefault();\n-//   const fileInput = document.getElementById('videoInput');\n-//   const formData = new FormData();\n-//   formData.append('video', fileInput.files[0]);\n-\n-//   await fetch(`${API_BASE}/upload`, {\n-//     method: 'POST',\n-//     body: formData\n-//   });\n-\n-//   loadVideos();\n-// });\n-\n-// async function loadVideos() {\n-//   const res = await fetch(`${API_BASE}/videos`);\n-//   const videos = await res.json();\n-\n-//   const videoFeed = document.getElementById('videoFeed');\n-//   videoFeed.innerHTML = '';\n-//   videos.forEach(filename => {\n-//     const video = document.createElement('video');\n-//     video.src = `${API_BASE}/uploads/${filename}`;\n-//     video.controls = true;\n-//     videoFeed.appendChild(video);\n-//   });\n-// }\n-\n-// loadVideos();\n-// === CONFIGURE THIS ===\n-// https://ftiktok-f8f4fwfsbkcdgbd8.azurewebsites.net/uploads\n-const API_BASE = 'https://ftiktok-f8f4fwfsbkcdgbd8.azurewebsites.net'; // Update if needed\n-\n-const uploadForm = document.getElementById('uploadForm');\n-const fileInput = document.getElementById('videoInput');\n-const statusEl = document.getElementById('status');\n-const videoFeed = document.getElementById('videoFeed');\n-const progressArea = document.getElementById('progressArea');\n-const progressBar = document.getElementById('progressBar');\n-const progressText = document.getElementById('progressText');\n-\n-uploadForm.addEventListener('submit', async (e) => {\n-  e.preventDefault();\n-  if (!fileInput.files || fileInput.files.length === 0) {\n-    alert('Please select a video file first.');\n-    return;\n-  }\n-  const file = fileInput.files[0];\n-  const form = new FormData();\n-  form.append('video', file);\n-\n-  statusEl.textContent = 'Uploading...';\n-  progressArea.style.display = 'block';\n-  progressBar.style.width = '0%';\n-  progressText.textContent = '';\n-\n-  try {\n-    await new Promise((resolve, reject) => {\n-      const xhr = new XMLHttpRequest();\n-      xhr.open('POST', API_BASE + '/upload', true);\n-      xhr.onload = () => (xhr.status >= 200 && xhr.status < 300) ? resolve(xhr.responseText) : reject(new Error(`Upload failed: ${xhr.status} ${xhr.statusText} – ${xhr.responseText}`));\n-      xhr.onerror = () => reject(new Error('Network error'));\n-      xhr.upload.onprogress = (evt) => {\n-        if (evt.lengthComputable) {\n-          const pct = Math.round((evt.loaded / evt.total) * 100);\n-          progressBar.style.width = pct + '%';\n-          progressText.textContent = `Uploaded ${pct}% (${Math.round(evt.loaded / 1024)} KB / ${Math.round(evt.total / 1024)} KB)`;\n-        }\n-      };\n-      xhr.send(form);\n-    });\n-\n-    statusEl.textContent = 'Upload complete ✅';\n-    fileInput.value = '';\n-    await loadVideos();\n-  } catch (err) {\n-    console.error(err);\n-    statusEl.textContent = 'Upload error ❌';\n-    alert('Upload failed: ' + (err.message || err));\n-  } finally {\n-    setTimeout(() => {\n-      progressArea.style.display = 'none';\n-      progressBar.style.width = '0%';\n-      progressText.textContent = '';\n-    }, 1500);\n-  }\n-});\n-\n-async function loadVideos() {\n-  try {\n-    const res = await fetch(API_BASE + '/videos');\n-    if (!res.ok) throw new Error(`Failed to list videos: ${res.status}`);\n-    const list = await res.json();\n-    videoFeed.innerHTML = '';\n-    if (!Array.isArray(list) || list.length === 0) {\n-      videoFeed.innerHTML = '<div class=\"small\">No videos yet</div>';\n-      return;\n-    }\n-    list.forEach(name => {\n-      const wrap = document.createElement('div');\n-      wrap.style.width = '320px';\n-      wrap.style.display = 'flex';\n-      wrap.style.flexDirection = 'column';\n-      wrap.style.gap = '8px';\n-\n-      const v = document.createElement('video');\n-      v.src = `${API_BASE}/uploads/${encodeURIComponent(name)}`;\n-      v.controls = true;\n-      v.width = 320;\n-\n-      const info = document.createElement('div');\n-      info.className = 'small';\n-      info.textContent = name;\n-\n-      wrap.appendChild(v);\n-      wrap.appendChild(info);\n-      videoFeed.appendChild(wrap);\n-    });\n-  } catch (err) {\n-    console.error(err);\n-    videoFeed.innerHTML = '<div class=\"small\">Could not load videos. Check backend or CORS.</div>';\n-  }\n-}\n-\n-window.addEventListener('load', loadVideos);\n-\n-// const API_BASE = 'http://127.0.0.1:5000';\n-\n-// document.getElementById('uploadForm').addEventListener('submit', async (e) => {\n-//   e.preventDefault();\n-//   const fileInput = document.getElementById('videoInput');\n-//   const formData = new FormData();\n-//   formData.append('video', fileInput.files[0]);\n-\n-//   await fetch(`${API_BASE}/upload`, {\n-//     method: 'POST',\n-//     body: formData\n-//   });\n-\n-//   loadVideos();\n-// });\n-\n-// async function loadVideos() {\n-//   const res = await fetch(`${API_BASE}/videos`);\n-//   const videos = await res.json();\n-\n-//   const videoFeed = document.getElementById('videoFeed');\n-//   videoFeed.innerHTML = '';\n-//   videos.forEach(filename => {\n-//     const video = document.createElement('video');\n-//     video.src = `${API_BASE}/uploads/${filename}`;\n-//     video.controls = true;\n-//     videoFeed.appendChild(video);\n-//   });\n-// }\n-\n-// loadVideos();\n"
                },
                {
                    "date": 1754935858573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const API_BASE = 'http://127.0.0.1:5000';\n+const API_BASE = 'https://lively-bush-0d5f5f803.2.azurestaticapps.net/';\n \n document.getElementById('uploadForm').addEventListener('submit', async (e) => {\n   e.preventDefault();\n   const fileInput = document.getElementById('videoInput');\n"
                }
            ],
            "date": 1754856332401,
            "name": "Commit-0",
            "content": "// === CONFIGURE THIS ===\n// https://ftiktok-f8f4fwfsbkcdgbd8.azurewebsites.net/uploads\nconst API_BASE = 'https://ftiktok-f8f4fwfsbkcdgbd8.azurewebsites.net'; // Update if needed\n\nconst uploadForm = document.getElementById('uploadForm');\nconst fileInput = document.getElementById('videoInput');\nconst statusEl = document.getElementById('status');\nconst videoFeed = document.getElementById('videoFeed');\nconst progressArea = document.getElementById('progressArea');\nconst progressBar = document.getElementById('progressBar');\nconst progressText = document.getElementById('progressText');\n\nuploadForm.addEventListener('submit', async (e) => {\n  e.preventDefault();\n  if (!fileInput.files || fileInput.files.length === 0) {\n    alert('Please select a video file first.');\n    return;\n  }\n  const file = fileInput.files[0];\n  const form = new FormData();\n  form.append('video', file);\n\n  statusEl.textContent = 'Uploading...';\n  progressArea.style.display = 'block';\n  progressBar.style.width = '0%';\n  progressText.textContent = '';\n\n  try {\n    await new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', API_BASE + '/upload', true);\n      xhr.onload = () => (xhr.status >= 200 && xhr.status < 300) ? resolve(xhr.responseText) : reject(new Error(`Upload failed: ${xhr.status} ${xhr.statusText} – ${xhr.responseText}`));\n      xhr.onerror = () => reject(new Error('Network error'));\n      xhr.upload.onprogress = (evt) => {\n        if (evt.lengthComputable) {\n          const pct = Math.round((evt.loaded / evt.total) * 100);\n          progressBar.style.width = pct + '%';\n          progressText.textContent = `Uploaded ${pct}% (${Math.round(evt.loaded / 1024)} KB / ${Math.round(evt.total / 1024)} KB)`;\n        }\n      };\n      xhr.send(form);\n    });\n\n    statusEl.textContent = 'Upload complete ✅';\n    fileInput.value = '';\n    await loadVideos();\n  } catch (err) {\n    console.error(err);\n    statusEl.textContent = 'Upload error ❌';\n    alert('Upload failed: ' + (err.message || err));\n  } finally {\n    setTimeout(() => {\n      progressArea.style.display = 'none';\n      progressBar.style.width = '0%';\n      progressText.textContent = '';\n    }, 1500);\n  }\n});\n\nasync function loadVideos() {\n  try {\n    const res = await fetch(API_BASE + '/videos');\n    if (!res.ok) throw new Error(`Failed to list videos: ${res.status}`);\n    const list = await res.json();\n    videoFeed.innerHTML = '';\n    if (!Array.isArray(list) || list.length === 0) {\n      videoFeed.innerHTML = '<div class=\"small\">No videos yet</div>';\n      return;\n    }\n    list.forEach(name => {\n      const wrap = document.createElement('div');\n      wrap.style.width = '320px';\n      wrap.style.display = 'flex';\n      wrap.style.flexDirection = 'column';\n      wrap.style.gap = '8px';\n\n      const v = document.createElement('video');\n      v.src = `${API_BASE}/uploads/${encodeURIComponent(name)}`;\n      v.controls = true;\n      v.width = 320;\n\n      const info = document.createElement('div');\n      info.className = 'small';\n      info.textContent = name;\n\n      wrap.appendChild(v);\n      wrap.appendChild(info);\n      videoFeed.appendChild(wrap);\n    });\n  } catch (err) {\n    console.error(err);\n    videoFeed.innerHTML = '<div class=\"small\">Could not load videos. Check backend or CORS.</div>';\n  }\n}\n\nwindow.addEventListener('load', loadVideos);\n\n// const API_BASE = 'http://127.0.0.1:5000';\n\n// document.getElementById('uploadForm').addEventListener('submit', async (e) => {\n//   e.preventDefault();\n//   const fileInput = document.getElementById('videoInput');\n//   const formData = new FormData();\n//   formData.append('video', fileInput.files[0]);\n\n//   await fetch(`${API_BASE}/upload`, {\n//     method: 'POST',\n//     body: formData\n//   });\n\n//   loadVideos();\n// });\n\n// async function loadVideos() {\n//   const res = await fetch(`${API_BASE}/videos`);\n//   const videos = await res.json();\n\n//   const videoFeed = document.getElementById('videoFeed');\n//   videoFeed.innerHTML = '';\n//   videos.forEach(filename => {\n//     const video = document.createElement('video');\n//     video.src = `${API_BASE}/uploads/${filename}`;\n//     video.controls = true;\n//     videoFeed.appendChild(video);\n//   });\n// }\n\n// loadVideos();\n"
        }
    ]
}